<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.myTest.jhsa" />
	
	
	
</beans:beans>


<!-- dd -->

<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		">

    <!-- Uncomment and your base-package here:
         <context:component-scan
            base-package="org.springframework.samples.web"/>  -->

	<context:component-scan base-package="com.myTest.jhsa"/>  
	<mvc:default-servlet-handler/>

    <mvc:annotation-driven />

		<mvc:interceptors>
    	<mvc:interceptor>
    		<mvc:mapping path="/**/*" />	

			
			<mvc:exclude-mapping path="/resources/**/" />	
			<mvc:exclude-mapping path="/css/**/" />	
			<mvc:exclude-mapping path="/js/**/" />	
			<mvc:exclude-mapping path="/images/**/" />	

			<!-- controller 실행 전이나 후에 실행 될 intercepter 로직 class -->
    	</mvc:interceptor>
	    	
	</mvc:interceptors>

	<mvc:resources mapping="/resources/**" location="/resources/"/>
 	<mvc:resources mapping="/css/**" location="/resources/css/"/>
 	<mvc:resources mapping="/js/**" location="/resources/js/"/>
 	<mvc:resources mapping="/images/**" location="/resources/images/"/>
 	<mvc:resources mapping="/files/**" location="/resources/files/"/>
 	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager">
			<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
				<property name="mediaTypes">
					<map>
			            <entry key="atom" value="application/atom+xml" />
			            <entry key="html" value="text/html" />
			            <entry key="jsp" value="text/html" />
			            <entry key="json" value="application/json" />
			        </map>
			    </property>
		    </bean>
	    </property>
	    
	    <property name="viewResolvers">
	        <list>
	            <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" >
		            <property name="order">
						<value>1</value>
					</property>
	            </bean>
	            <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	                <property name="prefix" value="/WEB-INF/view/" />
	                <property name="suffix" value=".jsp" />
	                <property name="cache" value="false" />
	                <property name="order">
						<value>0</value>
					</property>
	            </bean>
	        </list>
	    </property>
	    <property name="defaultViews">
	        <list>
	            <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
	            </bean>
	        </list>
	    </property>
	</bean>
	
<!-- 	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> -->
<!-- 		<property name="mediaTypes"> -->
<!-- 			<map> -->
<!-- 	            <entry key="atom" value="application/atom+xml" /> -->
<!-- 	            <entry key="html" value="text/html" /> -->
<!-- 	            <entry key="jsp" value="text/html" /> -->
<!-- 	            <entry key="json" value="application/json" /> -->
<!-- 	        </map> -->
<!-- 	    </property> -->
<!-- 	    <property name="viewResolvers"> -->
<!-- 	        <list> -->
<!-- 	            <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" > -->
<!-- 		            <property name="order"> -->
<!-- 						<value>1</value> -->
<!-- 					</property> -->
<!-- 	            </bean> -->
<!-- 	            <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!-- 	                <property name="prefix" value="/WEB-INF/view/" /> -->
<!-- 	                <property name="suffix" value=".jsp" /> -->
<!-- 	                <property name="cache" value="false" /> -->
<!-- 	                <property name="order"> -->
<!-- 						<value>0</value> -->
<!-- 					</property> -->
<!-- 	            </bean> -->
<!-- 	        </list> -->
<!-- 	    </property> -->
<!-- 	    <property name="defaultViews"> -->
<!-- 	        <list> -->
<!-- 	            <bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView"> -->
<!-- 	            </bean> -->
<!-- 	        </list> -->
<!-- 	    </property> -->
<!-- 	</bean> -->
	
	<util:properties id="globalProperty" location="classpath:global.properties"/>

</beans>
